// Вынес сюда сцены анимации, чтобы не мешать с основными стилями.
// Не очень понял, зачем по заданию это делать через transition,
// если это не эффекты взаимодействия и через animation в итоге удобнее.
$animation-duration: 500ms;
$animation-delay: 200ms;
$animation-timing-bezier: cubic-bezier(.08, 1.14, .97, .89);
$animation-timing-bublegum: cubic-bezier(.23, 1.93, 1, .71);

// first view - start
.page-header__logo,
.page-header__menu,
.screen__footer,
.intro__message {
  animation-duration: $animation-duration;
  animation-timing-function: $animation-timing-bezier;
  animation-play-state: paused;
  animation-fill-mode: backwards;
}

.page-header__logo {
  animation-name: fadeFromLeft;
}

.page-header__menu {
  animation-name: fade;
  animation-delay: $animation-delay;
}

.screen__footer {
  animation-name: fromBottom;
}

.intro__message {
  animation-name: fadeFromBottom;
  animation-delay: calc(#{$animation-delay} * 5);
}

@keyframes bubleToggler {
  0% {
    width: 0;
    height: 0;
    opacity: 0;
  }
}

.social-block__toggler::before {
  animation: bubleToggler $animation-duration $animation-timing-bublegum $animation-delay backwards;
  animation-play-state: paused;
}
// first view - end

.loaded {
  // first view - start
  .page-header__menu {
    a.active {
      &::after {
        transition-delay: $animation-delay;
        transform: scaleX(1);
        transform-origin: left;
      }
    }
  }

  .intro__message,
  .page-header__logo,
  .page-header__menu,
  .social-block__toggler::before,
  .screen__footer {
    animation-play-state: running;
  }
  // first view - end

  // rules section - start
  @keyframes bubleNumber {
    0% {
      transform: scale(0);
    }
  }

  @keyframes opacityColor {
    0% {
      color: transparent;
    }
  }

  @keyframes fadeRule {
    0% {
      opacity: 0;
      transform: translateX(20px)
    }
  }

  @keyframes scaleRuleButton {
    0% {
      font-size: 0;
      opacity: 0;
    }

    1% {
      opacity: 1;
    }
  }

  .active {
    --delay-rule: calc(#{$animation-duration} / 2);

    .rules__item::before {
      animation-name: bubleNumber, opacityColor;
      animation-duration: $animation-duration;
      animation-delay: 0ms, 200ms;
      animation-timing-function: $animation-timing-bublegum, linear;
      animation-fill-mode: backwards;
    }

    .rules__item p {
      animation: fadeRule $animation-duration $animation-timing-bezier backwards;
    }


    .rules__item:nth-child(1) {
      &::before {
        animation-delay: calc(var(--delay-rule) + 50ms);
      }

      p {
        animation-delay: calc(var(--delay-rule) + 100ms);
      }
    }

    .rules__item:nth-child(2) {
      &::before {
        animation-delay: calc(var(--delay-rule) + 150ms);
      }

      p {
        animation-delay: calc(var(--delay-rule) + 200ms);
      }
    }

    .rules__item:nth-child(3) {
      &::before {
        animation-delay: calc(var(--delay-rule) + 300ms);
      }

      p {
        animation-delay: calc(var(--delay-rule) + 400ms);
      }
    }

    .rules__item:nth-child(4) {
      &::before {
        animation-delay: calc(var(--delay-rule) + 500ms);
      }

      p {
        animation-delay: calc(var(--delay-rule) + 600ms);
      }
    }

    .rules__link {
      animation-name: scaleRuleButton, opacityColor;
      animation-duration: 300ms, 200ms;
      animation-delay: calc(var(--delay-rule) + 700ms), calc(var(--delay-rule) + 900ms);
      animation-timing-function: $animation-timing-bezier;
      animation-fill-mode: backwards;
    }
    // rules section - end
  }
}
